          global
                log /dev/log    local0
                log /dev/log    local1 notice
                chroot /var/lib/haproxy
                stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
                stats timeout 30s
                user haproxy
                group haproxy
                daemon

                # Default SSL material locations
                ca-base /etc/ssl/certs
                crt-base /etc/ssl/private

                # See: https://ssl-config.mozilla.org/#server=haproxy&server-version=2.0.3&config=intermediate
                  ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
                  ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
                  ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets

          defaults
                log     global
                mode    http
                option  httplog
                option  dontlognull
                  timeout connect 5000
                  timeout client  120s
                  timeout server  120s
                errorfile 400 /etc/haproxy/errors/400.http
                errorfile 403 /etc/haproxy/errors/403.http
                errorfile 408 /etc/haproxy/errors/408.http
                errorfile 500 /etc/haproxy/errors/500.http
                errorfile 502 /etc/haproxy/errors/502.http
                errorfile 503 /etc/haproxy/errors/503.http
                errorfile 504 /etc/haproxy/errors/504.http
          # Redis Database on port 6379
          frontend redis-fe-6379
            bind :6379   # Listen Port
            mode tcp  # Layer 4 (TCP)
            option tcplog # Log in standard format
            # Where to route
            default_backend redis-be-cloud
          resolvers mydns
              # points to AWS route 53 nameserver
              nameserver dns1 169.254.169.253:53
              accepted_payload_size 8192 # allow larger DNS payloads
          backend redis-be-cloud
            option tcp-check  # Check using 3-way handshake
            mode tcp    # Layer 4 (TCP)
            balance roundrobin  # Be smart here
            # Start upstream nodes
            # server srv0 redis-18138.internal.c17886.us-east-1-mz.ec2.cloud.rlrcp.com:18138 check port 18138
            #server srv0 redis.haproxy.test check port 6379 resolvers mydns init-addr none
            server srv0 redis-12000.internal.useast2.jphathena.demo-rlec.redislabs.com check port 12000 resolvers mydns init-addr none
	    # write a line below at startup in the UserData of the haproxy ec2 instance 
