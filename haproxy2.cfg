#---------------------------------------------------------------------
# Example configuration for a possible web application.  See the
# full configuration options online.
#
#   https://www.haproxy.org/download/1.8/doc/configuration.txt
#
#---------------------------------------------------------------------

#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    # to have these messages end up in /var/log/haproxy.log you will
    # need to:
    #
    # 1) configure syslog to accept network log events.  This is done
    #    by adding the '-r' option to the SYSLOGD_OPTIONS in
    #    /etc/sysconfig/syslog
    #
    # 2) configure local2 events to go to the /var/log/haproxy.log
    #   file. A line like the following can be added to
    #   /etc/sysconfig/syslog
    #
    #    local2.*                       /var/log/haproxy.log
    #
    log         127.0.0.1 local2

    chroot      /var/lib/haproxy2
    pidfile     /var/run/haproxy2.pid
    maxconn     4000
    user        haproxy
    group       haproxy
    daemon

    # turn on stats unix socket
    stats socket /var/lib/haproxy2/stats

    # utilize system-wide crypto-policies
    ssl-default-bind-ciphers PROFILE=SYSTEM
    ssl-default-server-ciphers PROFILE=SYSTEM

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    mode                    http
    log                     global
    option                  httplog
    option                  dontlognull
    option http-server-close
    option forwardfor       except 127.0.0.0/8
    option                  redispatch
    retries                 3
    timeout http-request    10s
    timeout queue           1m
    timeout connect         10s
    timeout client          1m
    timeout server          1m
    timeout http-keep-alive 10s
    timeout check           10s
    maxconn                 3000

# Redis Database on port 6379
frontend redis-fe-6379
    bind :6379   # Listen Port
    mode tcp  # Layer 4 (TCP)
    option tcplog # Log in standard format
    # Where to route
    default_backend redis-be-cloud
resolvers mydns
    # points to AWS route 53 nameserver
    nameserver dns1 169.254.169.253:53
    accepted_payload_size 8192 # allow larger DNS payloads
backend redis-be-cloud
    option tcp-check  # Check using 3-way handshake
    mode tcp    # Layer 4 (TCP)
    balance roundrobin  # Be smart here
    # Start upstream nodes
    # server srv0 redis-18138.internal.c17886.us-east-1-mz.ec2.cloud.rlrcp.com:18138 check port 18138
    #server srv0 redis.haproxy.test check port 6379 resolvers mydns init-addr none
    # write a line below at startup in the UserData of the haproxy ec2 instance 
